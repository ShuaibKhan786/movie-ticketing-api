services:
  movie-ticketing:
    depends_on:
      - mysql-server
      - redis-server
    build:
      context: .
    container_name: movie-ticketing-go-webserver
    hostname: webserver
    networks:
      - movie-ticketing-network
    ports:
      - "${PORT}:${PORT}"
    environment:
      - PORT=${PORT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DSN=${DSN}
      - REDIS_URL=${REDIS_URL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - REDIRECT_URL=${REDIRECT_URL}
      - GOOGLE_SCOPE_EMAIL_URL=${GOOGLE_SCOPE_EMAIL_URL}
      - GOOGLE_SCOPE_PROFILE_URL=${GOOGLE_SCOPE_PROFILE_URL}
      - GOOGLE_USERINFO_URL=${GOOGLE_USERINFO_URL}
      - OAUTH_STATE=${OAUTH_STATE}
      - DEFAULT_ORIGIN=${DEFAULT_ORIGIN}
      - GRPC_IMAGE_UPLOAD_SERVER_HOST=${GRPC_IMAGE_UPLOAD_SERVER_HOST}
    deploy:
      restart_policy:
        condition: on-failure
  
  image-upload-grpc-server:
    build:  
      context: ./microservice/image-upload/.
    container_name: image-upload-grpc-server
    hostname: grpcimageserver
    networks:
      - movie-ticketing-network
    ports:
      - "${IMAGE_UPLOAD_GRPC_SERVER_PORT}:${IMAGE_UPLOAD_GRPC_SERVER_PORT}"
    environment:
      - PORT=${IMAGE_UPLOAD_GRPC_SERVER_PORT}
    volumes:
      - ./microservice/image-upload/images:/home/images
    deploy:
      restart_policy:
        condition: on-failure

  nginx-webserver:
    image: nginx:1.27.0-alpine
    container_name: nginx-image-webserver
    ports:
      - 8080:80
    volumes:
      - ./microservice/image-upload/images:/var/www/images
      - ./nginx.conf:/etc/nginx/nginx.conf


  mysql-server:
    image: mysql:8.4.0
    container_name: movie-ticketing-mysql
    hostname: database
    networks:
      - movie-ticketing-network
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}

    volumes:
      - db_data:/var/lib/mysql
      - ./schema:/docker-entrypoint-initdb.d

  redis-server:
    image: redis:alpine
    container_name: movie-ticketing-redis
    hostname: redis
    networks:
      - movie-ticketing-network
    volumes:
      - redis_data:/data

networks:
  movie-ticketing-network:
    driver: bridge

volumes:
  db_data:
  redis_data:
